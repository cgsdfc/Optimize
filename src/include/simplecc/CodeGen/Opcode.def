// Definitions of Opcode
#ifndef HANDLE_OPCODE
#define HANDLE_OPCODE(opcode, camelName)
#endif

// Operand property layer.
#ifndef HAS_NO_OPERAND
#define HAS_NO_OPERAND(OP, NAME) HANDLE_OPCODE(OP, NAME)
#endif

#ifndef HAS_STR_OPERAND_ONLY
#define HAS_STR_OPERAND_ONLY(OP, NAME) HANDLE_OPCODE(OP, NAME)
#endif

#ifndef HAS_INT_OPERAND_ONLY
#define HAS_INT_OPERAND_ONLY(OP, NAME)  HANDLE_OPCODE(OP, NAME)
#endif

#ifndef HAS_INT_AND_STR_OPERAND
#define HAS_INT_AND_STR_OPERAND(OP, NAME)  HANDLE_OPCODE(OP, NAME)
#endif

// Operation property layer, mostly for grouping.
#ifndef HANDLE_MEMORY
#define HANDLE_MEMORY(opcode, camelName) HAS_STR_OPERAND_ONLY(opcode, camelName)
#endif

#ifndef HANDLE_BINARY
#define HANDLE_BINARY(opcode, camelName) HAS_NO_OPERAND(opcode, camelName)
#endif

#ifndef HANDLE_UNARY
#define HANDLE_UNARY(opcode, camelName) HAS_NO_OPERAND(opcode, camelName)
#endif

#ifndef HANDLE_INPUT
#define HANDLE_INPUT(OP, NAME) HAS_NO_OPERAND(OP, NAME)
#endif

#ifndef HANDLE_OUTPUT
#define HANDLE_OUTPUT(OP, NAME) HAS_INT_OPERAND_ONLY(OP, NAME)
#endif

#ifndef HANDLE_JUMP
#define HANDLE_JUMP(opcode, camelName) HAS_INT_OPERAND_ONLY(opcode, camelName)
#endif

// Memory load and store.
HANDLE_MEMORY(LOAD_LOCAL, LoadLocal)
HANDLE_MEMORY(LOAD_GLOBAL, LoadGlobal)
HANDLE_MEMORY(STORE_LOCAL, StoreLocal)
HANDLE_MEMORY(STORE_GLOBAL, StoreGlobal)

// Binary
HANDLE_BINARY(BINARY_ADD, BinaryAdd)
HANDLE_BINARY(BINARY_SUB, BinarySub)
HANDLE_BINARY(BINARY_MULTIPLY, BinaryMultiply)
HANDLE_BINARY(BINARY_DIVIDE, BinaryDivide)
HANDLE_BINARY(BINARY_SUBSCR, BinarySubscr)
HANDLE_BINARY(STORE_SUBSCR, StoreSubscr)

// Unary arithmetic.
HANDLE_UNARY(UNARY_POSITIVE, UnaryPositive)
HANDLE_UNARY(UNARY_NEGATIVE, UnaryNegative)

// Input.
HANDLE_INPUT(READ_INTEGER, ReadInteger)
HANDLE_INPUT(READ_CHARACTER, ReadCharacter)

// Output.
HANDLE_OUTPUT(PRINT_STRING, PrintString)
HANDLE_OUTPUT(PRINT_CHARACTER, PrintCharacter)
HANDLE_OUTPUT(PRINT_INTEGER, PrintInteger)
HANDLE_OUTPUT(PRINT_NEWLINE, PrintNewline)

// Conditional and unconditional jump.
HANDLE_JUMP(JUMP_FORWARD, JumpForward)
HANDLE_JUMP(JUMP_IF_TRUE, JumpIfTrue)
HANDLE_JUMP(JUMP_IF_FALSE, JumpIfFalse)
HANDLE_JUMP(JUMP_IF_EQUAL, JumpIfEqual)
HANDLE_JUMP(JUMP_IF_NOT_EQUAL, JumpIfNotEqual)
HANDLE_JUMP(JUMP_IF_GREATER, JumpIfGreater)
HANDLE_JUMP(JUMP_IF_GREATER_EQUAL, JumpIfGreaterEqual)
HANDLE_JUMP(JUMP_IF_LESS, JumpIfLess)
HANDLE_JUMP(JUMP_IF_LESS_EQUAL, JumpIfLessEqual)

// Others
HAS_INT_AND_STR_OPERAND(CALL_FUNCTION, CallFunction)

HAS_INT_OPERAND_ONLY(RETURN_VALUE, ReturnValue)
HAS_INT_OPERAND_ONLY(LOAD_CONST, LoadConst)
HAS_INT_OPERAND_ONLY(LOAD_STRING, LoadString)

HAS_NO_OPERAND(RETURN_NONE, ReturnNone)
HAS_NO_OPERAND(POP_TOP, PopTop)

// Clean up all #define's
#undef HANDLE_MEMORY
#undef HANDLE_BINARY
#undef HANDLE_UNARY
#undef HANDLE_INPUT
#undef HANDLE_OUTPUT
#undef HANDLE_JUMP

#undef HAS_INT_OPERAND_ONLY
#undef HAS_STR_OPERAND_ONLY
#undef HAS_INT_AND_STR_OPERAND
#undef HAS_NO_OPERAND

#undef HANDLE_OPCODE
// Enumerations definition for AST
#if !(defined HANDLE_OPERATOR || defined HANDLE_BASICTYPE || \
    defined HANDLE_UNARYOP || defined HANDLE_EXPRCONTEXT ||  \
    defined HANDLE_COMPARE_OPERATOR || defined HANDLE_ARITHMETIC_OPERATOR)
#error "Missing macro definition of HANDLE_*"
#endif

#ifndef HANDLE_OPERATOR
#define HANDLE_OPERATOR(VAL, OP, FUNC)
#endif

#ifndef HANDLE_ARITHMETIC_OPERATOR
#define HANDLE_ARITHMETIC_OPERATOR(VAL, OP, FUNC) HANDLE_OPERATOR(VAL, OP, FUNC)
#endif

#ifndef HANDLE_COMPARE_OPERATOR
#define HANDLE_COMPARE_OPERATOR(VAL, OP, FUNC) HANDLE_OPERATOR(VAL, OP, FUNC)
#endif

#ifndef HANDLE_UNARYOP
#define HANDLE_UNARYOP(VAL, STR)
#endif

#ifndef HANDLE_EXPRCONTEXT
#define HANDLE_EXPRCONTEXT(VAL, STR)
#endif

#ifndef HANDLE_BASICTYPE
#define HANDLE_BASICTYPE(VAL, STR)
#endif

HANDLE_ARITHMETIC_OPERATOR(Add, "+", plus)
HANDLE_ARITHMETIC_OPERATOR(Sub, "-", minus)
HANDLE_ARITHMETIC_OPERATOR(Mult, "*", multiplies)
HANDLE_ARITHMETIC_OPERATOR(Div, "/", divides)

HANDLE_COMPARE_OPERATOR(Eq, "==", equal_to)
HANDLE_COMPARE_OPERATOR(NotEq, "!=", not_equal_to)
HANDLE_COMPARE_OPERATOR(Lt, "<", less)
HANDLE_COMPARE_OPERATOR(LtE, "<=", less_equal)
HANDLE_COMPARE_OPERATOR(Gt, ">", greater)
HANDLE_COMPARE_OPERATOR(GtE, ">=", greater_equal)

HANDLE_UNARYOP(UAdd, "+")
HANDLE_UNARYOP(USub, "-")

HANDLE_EXPRCONTEXT(Load, "")
HANDLE_EXPRCONTEXT(Store, "")

HANDLE_BASICTYPE(Int, "int")
HANDLE_BASICTYPE(Character, "char")
HANDLE_BASICTYPE(Void, "void")

#undef HANDLE_ARITHMETIC_OPERATOR
#undef HANDLE_COMPARE_OPERATOR
#undef HANDLE_OPERATOR
#undef HANDLE_UNARYOP
#undef HANDLE_BASICTYPE
#undef HANDLE_EXPRCONTEXT
Program(decls=[ConstDecl(type=BasicTypeKind::Int, value=Num(n=1,
loc=Location(1, 21)), name=positive, loc=Location(1, 10)),
ConstDecl(type=BasicTypeKind::Int, value=Num(n=-1, loc=Location(2, 21)),
name=negative, loc=Location(2, 10)), ConstDecl(type=BasicTypeKind::Int,
value=Num(n=100, loc=Location(3, 26)), name=max_heap_size, loc=Location(3,
10)), ConstDecl(type=BasicTypeKind::Character, value=Char(c=99,
loc=Location(4, 23)), name=character, loc=Location(4, 11)),
ConstDecl(type=BasicTypeKind::Int, value=Num(n=1, loc=Location(6, 21)),
name=is_valid, loc=Location(6, 10)), ConstDecl(type=BasicTypeKind::Int,
value=Num(n=0, loc=Location(6, 34)), name=hasattr, loc=Location(6,
24)), ConstDecl(type=BasicTypeKind::Character, value=Char(c=48,
loc=Location(7, 19)), name=digit, loc=Location(7, 11)),
ConstDecl(type=BasicTypeKind::Character, value=Char(c=97,
loc=Location(7, 33)), name=letter, loc=Location(7, 24)),
VarDecl(type=BasicTypeKind::Int, is_array=1, size=100, name=heap,
loc=Location(9, 8)), VarDecl(type=BasicTypeKind::Int, is_array=0, size=0,
name=index, loc=Location(10, 0)), VarDecl(type=BasicTypeKind::Int,
is_array=0, size=0, name=flag, loc=Location(12, 8)),
VarDecl(type=BasicTypeKind::Int, is_array=1, size=2, name=array,
loc=Location(12, 10)), VarDecl(type=BasicTypeKind::Int,
is_array=0, size=0, name=module, loc=Location(13, 10)),
VarDecl(type=BasicTypeKind::Int, is_array=0, size=0, name=class,
loc=Location(13, 12)), VarDecl(type=BasicTypeKind::Int,
is_array=1, size=10, name=errors, loc=Location(14, 10)),
VarDecl(type=BasicTypeKind::Int, is_array=1, size=20, name=input,
loc=Location(14, 16)), FuncDef(return_type=BasicTypeKind::Int,
args=[Arg(type=BasicTypeKind::Int, name=a, loc=Location(16,
9)), Arg(type=BasicTypeKind::Int, name=b, loc=Location(16,
16))], decls=[], stmts=[Return(value=BinOp(left=Name(id=a,
ctx=ExprContextKind::Load, loc=Location(17, 10)), op=OperatorKind::Add,
right=Name(id=b, ctx=ExprContextKind::Load, loc=Location(17,
14)), loc=Location(17, 12)), loc=Location(17, 2))], name=addi,
loc=Location(16, 0)), FuncDef(return_type=BasicTypeKind::Int,
args=[Arg(type=BasicTypeKind::Character, name=a, loc=Location(20,
9)), Arg(type=BasicTypeKind::Character, name=b, loc=Location(20,
17))], decls=[], stmts=[Return(value=BinOp(left=Name(id=a,
ctx=ExprContextKind::Load, loc=Location(21, 10)), op=OperatorKind::Add,
right=Name(id=b, ctx=ExprContextKind::Load, loc=Location(21,
14)), loc=Location(21, 12)), loc=Location(21, 2))], name=addc,
loc=Location(20, 0)), FuncDef(return_type=BasicTypeKind::Void,
args=[Arg(type=BasicTypeKind::Character, name=c,
loc=Location(24, 16))], decls=[], stmts=[Write(str=None,
value=Name(id=c, ctx=ExprContextKind::Load, loc=Location(25,
9)), loc=Location(25, 2))], name=print_char, loc=Location(24,
0)), FuncDef(return_type=BasicTypeKind::Void, args=[], decls=[],
stmts=[Write(str=Str(s="this is a string", loc=Location(29,
9)), value=None, loc=Location(29, 2))], name=print_string,
loc=Location(28, 0)), FuncDef(return_type=BasicTypeKind::Void,
args=[Arg(type=BasicTypeKind::Int, name=expr, loc=Location(32, 21))],
decls=[], stmts=[Write(str=Str(s="expr is ", loc=Location(33, 9)),
value=Name(id=expr, ctx=ExprContextKind::Load, loc=Location(33,
21)), loc=Location(33, 2))], name=print_string_ex, loc=Location(32,
0)), FuncDef(return_type=BasicTypeKind::Void, args=[], decls=[],
stmts=[While(condition=BoolOp(value=Num(n=1, loc=Location(37,
9)), loc=Location(37, 9)), body=[Write(str=Str(s="In dead loop",
loc=Location(38, 11)), value=None, loc=Location(38, 4))],
loc=Location(37, 2))], name=dead_loop, loc=Location(36,
0)), FuncDef(return_type=BasicTypeKind::Int,
args=[], decls=[VarDecl(type=BasicTypeKind::Int,
is_array=0, size=0, name=val, loc=Location(43, 6))],
stmts=[Write(str=Str(s="Please input an integer:", loc=Location(44,
9)), value=None, loc=Location(44, 2)), Read(names=[Name(id=val,
ctx=ExprContextKind::Store, loc=Location(45, 8))], loc=Location(45,
2)), Return(value=Name(id=val, ctx=ExprContextKind::Load,
loc=Location(46, 10)), loc=Location(46, 2))], name=prompt_int,
loc=Location(42, 0)), FuncDef(return_type=BasicTypeKind::Void,
args=[Arg(type=BasicTypeKind::Int, name=index1, loc=Location(50, 10)),
Arg(type=BasicTypeKind::Int, name=index2, loc=Location(50, 22))],
decls=[VarDecl(type=BasicTypeKind::Int, is_array=0, size=0, name=temp,
loc=Location(51, 6))], stmts=[Assign(target=Name(id=temp,
ctx=ExprContextKind::Store, loc=Location(52, 2)),
value=Subscript(name=heap, index=Name(id=index1,
ctx=ExprContextKind::Load, loc=Location(52, 14)),
ctx=ExprContextKind::Load, loc=Location(52, 13)),
loc=Location(52, 2)), Assign(target=Subscript(name=heap,
index=Name(id=index1, ctx=ExprContextKind::Load, loc=Location(53,
7)), ctx=ExprContextKind::Store, loc=Location(53,
6)), value=Subscript(name=heap, index=Name(id=index2,
ctx=ExprContextKind::Load, loc=Location(53, 22)),
ctx=ExprContextKind::Load, loc=Location(53, 21)),
loc=Location(53, 2)), Assign(target=Subscript(name=heap,
index=Name(id=index2, ctx=ExprContextKind::Load, loc=Location(54, 7)),
ctx=ExprContextKind::Store, loc=Location(54, 6)), value=Name(id=temp,
ctx=ExprContextKind::Load, loc=Location(54, 17)), loc=Location(54, 2))],
name=swap, loc=Location(50, 0)), FuncDef(return_type=BasicTypeKind::Void,
args=[Arg(type=BasicTypeKind::Int, name=index, loc=Location(57,
13)), Arg(type=BasicTypeKind::Int, name=heap_size, loc=Location(57,
24))], decls=[VarDecl(type=BasicTypeKind::Int, is_array=0, size=0,
name=largest, loc=Location(58, 6)), VarDecl(type=BasicTypeKind::Int,
is_array=0, size=0, name=left, loc=Location(59, 6)),
VarDecl(type=BasicTypeKind::Int, is_array=0, size=0, name=right,
loc=Location(60, 6))], stmts=[Assign(target=Name(id=largest,
ctx=ExprContextKind::Store, loc=Location(62, 2)), value=Name(id=index,
ctx=ExprContextKind::Load, loc=Location(62, 12)), loc=Location(62,
2)), Assign(target=Name(id=left, ctx=ExprContextKind::Store,
loc=Location(63, 2)), value=BinOp(left=BinOp(left=Num(n=2,
loc=Location(63, 9)), op=OperatorKind::Mult, right=Name(id=index,
ctx=ExprContextKind::Load, loc=Location(63, 13)),
loc=Location(63, 11)), op=OperatorKind::Add, right=Num(n=1,
loc=Location(63, 21)), loc=Location(63, 19)), loc=Location(63, 2)),
Assign(target=Name(id=right, ctx=ExprContextKind::Store, loc=Location(64,
2)), value=BinOp(left=BinOp(left=Num(n=2, loc=Location(64, 10)),
op=OperatorKind::Mult, right=Name(id=index, ctx=ExprContextKind::Load,
loc=Location(64, 14)), loc=Location(64, 12)), op=OperatorKind::Add,
right=Num(n=2, loc=Location(64, 22)), loc=Location(64, 20)),
loc=Location(64, 2)), If(test=BoolOp(value=BinOp(left=Name(id=left,
ctx=ExprContextKind::Load, loc=Location(66, 6)), op=OperatorKind::Lt,
right=Name(id=heap_size, ctx=ExprContextKind::Load,
loc=Location(66, 13)), loc=Location(66, 11)), loc=Location(66,
6)), body=[If(test=BoolOp(value=BinOp(left=Subscript(name=heap,
index=Name(id=left, ctx=ExprContextKind::Load, loc=Location(67,
13)), ctx=ExprContextKind::Load, loc=Location(67,
12)), op=OperatorKind::Gt, right=Subscript(name=heap,
index=Name(id=largest, ctx=ExprContextKind::Load, loc=Location(67, 26)),
ctx=ExprContextKind::Load, loc=Location(67, 25)), loc=Location(67,
19)), loc=Location(67, 8)), body=[Assign(target=Name(id=largest,
ctx=ExprContextKind::Store, loc=Location(68, 6)),
value=Name(id=left, ctx=ExprContextKind::Load, loc=Location(68, 16)),
loc=Location(68, 6))], orelse=[], loc=Location(67, 4))], orelse=[],
loc=Location(66, 2)), If(test=BoolOp(value=BinOp(left=Name(id=right,
ctx=ExprContextKind::Load, loc=Location(72, 6)), op=OperatorKind::Lt,
right=Name(id=heap_size, ctx=ExprContextKind::Load,
loc=Location(72, 14)), loc=Location(72, 12)), loc=Location(72,
6)), body=[If(test=BoolOp(value=BinOp(left=Subscript(name=heap,
index=Name(id=right, ctx=ExprContextKind::Load, loc=Location(73,
13)), ctx=ExprContextKind::Load, loc=Location(73,
12)), op=OperatorKind::Gt, right=Subscript(name=heap,
index=Name(id=largest, ctx=ExprContextKind::Load, loc=Location(73, 27)),
ctx=ExprContextKind::Load, loc=Location(73, 26)), loc=Location(73,
20)), loc=Location(73, 8)), body=[Assign(target=Name(id=largest,
ctx=ExprContextKind::Store, loc=Location(74, 6)), value=Name(id=right,
ctx=ExprContextKind::Load, loc=Location(74, 16)), loc=Location(74,
6))], orelse=[], loc=Location(73, 4))], orelse=[], loc=Location(72,
2)), If(test=BoolOp(value=BinOp(left=Name(id=largest,
ctx=ExprContextKind::Load, loc=Location(78, 6)), op=OperatorKind::NotEq,
right=Name(id=index, ctx=ExprContextKind::Load, loc=Location(78,
17)), loc=Location(78, 14)), loc=Location(78, 6)),
body=[ExprStmt(value=Call(func=swap, args=[Name(id=index,
ctx=ExprContextKind::Load, loc=Location(79, 9)), Name(id=largest,
ctx=ExprContextKind::Load, loc=Location(79, 16))], loc=Location(79,
4)), loc=Location(79, 4)), ExprStmt(value=Call(func=heapify,
args=[Name(id=largest, ctx=ExprContextKind::Load, loc=Location(80,
12)), Name(id=heap_size, ctx=ExprContextKind::Load,
loc=Location(80, 21))], loc=Location(80, 4)), loc=Location(80,
4))], orelse=[], loc=Location(78, 2))], name=heapify,
loc=Location(57, 0)), FuncDef(return_type=BasicTypeKind::Void,
args=[Arg(type=BasicTypeKind::Int, name=heap_size, loc=Location(85,
15))], decls=[VarDecl(type=BasicTypeKind::Int, is_array=0, size=0,
name=i, loc=Location(86, 6))], stmts=[Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=Location(88, 2)),
value=BinOp(left=BinOp(left=Name(id=heap_size, ctx=ExprContextKind::Load,
loc=Location(88, 6)), op=OperatorKind::Div, right=Num(n=2,
loc=Location(88, 18)), loc=Location(88, 16)), op=OperatorKind::Sub,
right=Num(n=1, loc=Location(88, 22)), loc=Location(88, 20)),
loc=Location(88, 2)), While(condition=BoolOp(value=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=Location(89, 9)), op=OperatorKind::GtE,
right=Num(n=0, loc=Location(89, 14)), loc=Location(89, 11)),
loc=Location(89, 9)), body=[ExprStmt(value=Call(func=heapify,
args=[Name(id=i, ctx=ExprContextKind::Load, loc=Location(90,
12)), Name(id=heap_size, ctx=ExprContextKind::Load,
loc=Location(90, 15))], loc=Location(90, 4)), loc=Location(90, 4)),
Assign(target=Name(id=i, ctx=ExprContextKind::Store, loc=Location(91, 4)),
value=BinOp(left=Name(id=i, ctx=ExprContextKind::Load, loc=Location(91,
8)), op=OperatorKind::Sub, right=Num(n=1, loc=Location(91, 12)),
loc=Location(91, 10)), loc=Location(91, 4))], loc=Location(89, 2)),
For(initial=Assign(target=Name(id=i, ctx=ExprContextKind::Store,
loc=Location(94, 7)), value=BinOp(left=Name(id=heap_size,
ctx=ExprContextKind::Load, loc=Location(94, 11)), op=OperatorKind::Sub,
right=Num(n=1, loc=Location(94, 23)), loc=Location(94,
21)), loc=Location(94, 7)), condition=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=Location(94, 26)), op=OperatorKind::GtE,
right=Num(n=0, loc=Location(94, 31)), loc=Location(94, 28)),
step=Assign(target=Name(id=i, ctx=ExprContextKind::Store, loc=Location(94,
34)), value=BinOp(left=Name(id=i, ctx=ExprContextKind::Load,
loc=Location(94, 38)), op=OperatorKind::Sub, right=Num(n=1,
loc=Location(94, 42)), loc=Location(94, 38)), loc=Location(94,
34)), body=[ExprStmt(value=Call(func=swap, args=[Num(n=0,
loc=Location(95, 9)), Name(id=i, ctx=ExprContextKind::Load,
loc=Location(95, 12))], loc=Location(95, 4)), loc=Location(95,
4)), ExprStmt(value=Call(func=heapify, args=[Num(n=0,
loc=Location(96, 12)), Name(id=i, ctx=ExprContextKind::Load,
loc=Location(96, 15))], loc=Location(96, 4)),
loc=Location(96, 4))], loc=Location(94, 2))], name=heap_sort,
loc=Location(85, 0)), FuncDef(return_type=BasicTypeKind::Void,
args=[Arg(type=BasicTypeKind::Int, name=heap_size, loc=Location(100,
16))], decls=[VarDecl(type=BasicTypeKind::Int, is_array=0, size=0, name=i,
loc=Location(101, 6))], stmts=[For(initial=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=Location(103, 7)),
value=Num(n=0, loc=Location(103, 11)), loc=Location(103,
7)), condition=BinOp(left=Name(id=i, ctx=ExprContextKind::Load,
loc=Location(103, 14)), op=OperatorKind::Lt, right=Name(id=heap_size,
ctx=ExprContextKind::Load, loc=Location(103, 18)), loc=Location(103,
16)), step=Assign(target=Name(id=i, ctx=ExprContextKind::Store,
loc=Location(103, 29)), value=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=Location(103, 33)),
op=OperatorKind::Add, right=Num(n=1, loc=Location(103, 37)),
loc=Location(103, 33)), loc=Location(103, 29)), body=[Write(str=None,
value=Subscript(name=heap, index=Name(id=i, ctx=ExprContextKind::Load,
loc=Location(104, 16)), ctx=ExprContextKind::Load, loc=Location(104,
15)), loc=Location(104, 4)), If(test=BoolOp(value=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=Location(105, 8)), op=OperatorKind::NotEq,
right=BinOp(left=Name(id=heap_size, ctx=ExprContextKind::Load,
loc=Location(105, 13)), op=OperatorKind::Sub, right=Num(n=1,
loc=Location(105, 25)), loc=Location(105, 23)), loc=Location(105, 10)),
loc=Location(105, 8)), body=[Write(str=Str(s=" ", loc=Location(106,
13)), value=None, loc=Location(106, 6))], orelse=[], loc=Location(105,
4))], loc=Location(103, 2))], name=print_heap, loc=Location(100,
0)), FuncDef(return_type=BasicTypeKind::Void, args=[],
decls=[VarDecl(type=BasicTypeKind::Int, is_array=0, size=0, name=i,
loc=Location(112, 6))], stmts=[For(initial=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=Location(114, 7)),
value=Num(n=0, loc=Location(114, 11)), loc=Location(114,
7)), condition=BinOp(left=Name(id=i, ctx=ExprContextKind::Load,
loc=Location(114, 14)), op=OperatorKind::Lt, right=Name(id=max_heap_size,
ctx=ExprContextKind::Load, loc=Location(114, 18)), loc=Location(114,
16)), step=Assign(target=Name(id=i, ctx=ExprContextKind::Store,
loc=Location(114, 33)), value=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=Location(114, 37)), op=OperatorKind::Add,
right=Num(n=1, loc=Location(114, 41)), loc=Location(114, 37)),
loc=Location(114, 33)), body=[Assign(target=Subscript(name=heap,
index=Name(id=i, ctx=ExprContextKind::Load, loc=Location(115,
9)), ctx=ExprContextKind::Store, loc=Location(115, 8)),
value=Num(n=0, loc=Location(115, 14)), loc=Location(115, 4))],
loc=Location(114, 2))], name=reset_heap, loc=Location(111,
0)), FuncDef(return_type=BasicTypeKind::Void, args=[],
decls=[VarDecl(type=BasicTypeKind::Int, is_array=0, size=0,
name=n, loc=Location(120, 6)), VarDecl(type=BasicTypeKind::Int,
is_array=0, size=0, name=temp, loc=Location(121, 6)),
VarDecl(type=BasicTypeKind::Int, is_array=0, size=0, name=i,
loc=Location(122, 6)), VarDecl(type=BasicTypeKind::Int, is_array=0,
size=0, name=j, loc=Location(122, 9)), VarDecl(type=BasicTypeKind::Int,
is_array=0, size=0, name=array_size, loc=Location(123,
6))], stmts=[ExprStmt(value=Call(func=reset_heap, args=[],
loc=Location(125, 2)), loc=Location(125, 2)), Read(names=[Name(id=n,
ctx=ExprContextKind::Store, loc=Location(126, 8))],
loc=Location(126, 2)), For(initial=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=Location(128, 7)),
value=Num(n=0, loc=Location(128, 11)), loc=Location(128, 7)),
condition=BinOp(left=Name(id=i, ctx=ExprContextKind::Load,
loc=Location(128, 14)), op=OperatorKind::Lt, right=Name(id=n,
ctx=ExprContextKind::Load, loc=Location(128, 18)), loc=Location(128,
16)), step=Assign(target=Name(id=i, ctx=ExprContextKind::Store,
loc=Location(128, 21)), value=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=Location(128, 25)), op=OperatorKind::Add,
right=Num(n=1, loc=Location(128, 29)), loc=Location(128, 25)),
loc=Location(128, 21)), body=[Read(names=[Name(id=array_size,
ctx=ExprContextKind::Store, loc=Location(129, 10))], loc=Location(129,
4)), If(test=BoolOp(value=BinOp(left=Name(id=array_size,
ctx=ExprContextKind::Load, loc=Location(130, 8)), op=OperatorKind::Gt,
right=Name(id=max_heap_size, ctx=ExprContextKind::Load,
loc=Location(130, 21)), loc=Location(130, 19)), loc=Location(130,
8)), body=[Write(str=Str(s="array_size exceeds max_heap_size",
loc=Location(131, 13)), value=None, loc=Location(131,
6))], orelse=[For(initial=Assign(target=Name(id=j,
ctx=ExprContextKind::Store, loc=Location(133, 11)),
value=Num(n=0, loc=Location(133, 15)), loc=Location(133,
11)), condition=BinOp(left=Name(id=j, ctx=ExprContextKind::Load,
loc=Location(133, 18)), op=OperatorKind::Lt, right=Name(id=array_size,
ctx=ExprContextKind::Load, loc=Location(133, 22)), loc=Location(133,
20)), step=Assign(target=Name(id=j, ctx=ExprContextKind::Store,
loc=Location(133, 34)), value=BinOp(left=Name(id=j,
ctx=ExprContextKind::Load, loc=Location(133, 38)), op=OperatorKind::Add,
right=Num(n=1, loc=Location(133, 42)), loc=Location(133, 38)),
loc=Location(133, 34)), body=[Read(names=[Name(id=temp,
ctx=ExprContextKind::Store, loc=Location(134, 14))],
loc=Location(134, 8)), Assign(target=Subscript(name=heap,
index=Name(id=j, ctx=ExprContextKind::Load, loc=Location(135, 13)),
ctx=ExprContextKind::Store, loc=Location(135, 12)), value=Name(id=temp,
ctx=ExprContextKind::Load, loc=Location(135, 18)), loc=Location(135,
8))], loc=Location(133, 6)), ExprStmt(value=Call(func=heap_sort,
args=[Name(id=array_size, ctx=ExprContextKind::Load,
loc=Location(137, 16))], loc=Location(137, 6)), loc=Location(137,
6)), ExprStmt(value=Call(func=print_heap, args=[Name(id=array_size,
ctx=ExprContextKind::Load, loc=Location(138, 17))], loc=Location(138,
6)), loc=Location(138, 6))], loc=Location(130, 4))], loc=Location(128,
2))], name=main, loc=Location(119, 0))])

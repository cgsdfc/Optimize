Program(decls=[ConstDecl(type=BasicTypeKind::Int,
name=max_heap_size, value=Num(n=100, loc=(1, 26)), loc=(1, 0)),
VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=1, size=100),
name=heap, loc=(3, 8)), FuncDef(return_type=BasicTypeKind::Void,
name=swap, args=[Arg(type=BasicTypeKind::Int, name=index1, loc=(5,
10)), Arg(type=BasicTypeKind::Int, name=index2, loc=(5, 22))],
decls=[VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0,
size=0), name=temp, loc=(6, 2))], stmts=[Assign(target=Name(id=temp,
ctx=ExprContextKind::Store, loc=(7, 2)), value=Subscript(name=heap,
index=Name(id=index1, ctx=ExprContextKind::Load, loc=(7,
14)), ctx=ExprContextKind::Load, loc=(7, 13)), loc=(7,
2)), Assign(target=Subscript(name=heap, index=Name(id=index1,
ctx=ExprContextKind::Load, loc=(8, 7)), ctx=ExprContextKind::Store,
loc=(8, 6)), value=Subscript(name=heap, index=Name(id=index2,
ctx=ExprContextKind::Load, loc=(8, 22)), ctx=ExprContextKind::Load,
loc=(8, 21)), loc=(8, 2)), Assign(target=Subscript(name=heap,
index=Name(id=index2, ctx=ExprContextKind::Load, loc=(9, 7)),
ctx=ExprContextKind::Store, loc=(9, 6)), value=Name(id=temp,
ctx=ExprContextKind::Load, loc=(9, 17)), loc=(9, 2))], loc=(5,
0)), FuncDef(return_type=BasicTypeKind::Void, name=heapify,
args=[Arg(type=BasicTypeKind::Int, name=index, loc=(12, 13)),
Arg(type=BasicTypeKind::Int, name=heap_size, loc=(12, 24))],
decls=[VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0, size=0),
name=largest, loc=(13, 2)), VarDecl(type=VarType(type=BasicTypeKind::Int,
is_array=0, size=0), name=left, loc=(14, 2)),
VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0, size=0),
name=right, loc=(15, 2))], stmts=[Assign(target=Name(id=largest,
ctx=ExprContextKind::Store, loc=(17, 2)), value=Name(id=index,
ctx=ExprContextKind::Load, loc=(17, 12)), loc=(17, 2)),
Assign(target=Name(id=left, ctx=ExprContextKind::Store, loc=(18, 2)),
value=BinOp(left=BinOp(left=Num(n=2, loc=(18, 9)), op=OperatorKind::Mult,
right=Name(id=index, ctx=ExprContextKind::Load, loc=(18, 13)), loc=(18,
11)), op=OperatorKind::Add, right=Num(n=1, loc=(18, 21)), loc=(18, 19)),
loc=(18, 2)), Assign(target=Name(id=right, ctx=ExprContextKind::Store,
loc=(19, 2)), value=BinOp(left=BinOp(left=Num(n=2, loc=(19, 10)),
op=OperatorKind::Mult, right=Name(id=index, ctx=ExprContextKind::Load,
loc=(19, 14)), loc=(19, 12)), op=OperatorKind::Add,
right=Num(n=2, loc=(19, 22)), loc=(19, 20)), loc=(19, 2)),
If(test=BinOp(left=Name(id=left, ctx=ExprContextKind::Load,
loc=(21, 6)), op=OperatorKind::Lt, right=Name(id=heap_size,
ctx=ExprContextKind::Load, loc=(21, 13)), loc=(21, 11)),
body=[If(test=BinOp(left=Subscript(name=heap, index=Name(id=left,
ctx=ExprContextKind::Load, loc=(22, 13)), ctx=ExprContextKind::Load,
loc=(22, 12)), op=OperatorKind::Gt, right=Subscript(name=heap,
index=Name(id=largest, ctx=ExprContextKind::Load, loc=(22,
26)), ctx=ExprContextKind::Load, loc=(22, 25)), loc=(22, 19)),
body=[Assign(target=Name(id=largest, ctx=ExprContextKind::Store,
loc=(23, 6)), value=Name(id=left, ctx=ExprContextKind::Load, loc=(23,
16)), loc=(23, 6))], orelse=[], loc=(22, 4))], orelse=[], loc=(21,
2)), If(test=BinOp(left=Name(id=right, ctx=ExprContextKind::Load,
loc=(27, 6)), op=OperatorKind::Lt, right=Name(id=heap_size,
ctx=ExprContextKind::Load, loc=(27, 14)), loc=(27, 12)),
body=[If(test=BinOp(left=Subscript(name=heap, index=Name(id=right,
ctx=ExprContextKind::Load, loc=(28, 13)), ctx=ExprContextKind::Load,
loc=(28, 12)), op=OperatorKind::Gt, right=Subscript(name=heap,
index=Name(id=largest, ctx=ExprContextKind::Load, loc=(28,
27)), ctx=ExprContextKind::Load, loc=(28, 26)), loc=(28, 20)),
body=[Assign(target=Name(id=largest, ctx=ExprContextKind::Store,
loc=(29, 6)), value=Name(id=right, ctx=ExprContextKind::Load,
loc=(29, 16)), loc=(29, 6))], orelse=[], loc=(28, 4))],
orelse=[], loc=(27, 2)), If(test=BinOp(left=Name(id=largest,
ctx=ExprContextKind::Load, loc=(33, 6)), op=OperatorKind::NotEq,
right=Name(id=index, ctx=ExprContextKind::Load, loc=(33,
17)), loc=(33, 14)), body=[ExprStmt(value=Call(func=swap,
args=[Name(id=index, ctx=ExprContextKind::Load, loc=(34, 9)),
Name(id=largest, ctx=ExprContextKind::Load, loc=(34, 16))],
loc=(34, 8)), loc=(34, 4)), ExprStmt(value=Call(func=heapify,
args=[Name(id=largest, ctx=ExprContextKind::Load, loc=(35, 12)),
Name(id=heap_size, ctx=ExprContextKind::Load, loc=(35, 21))],
loc=(35, 11)), loc=(35, 4))], orelse=[], loc=(33, 2))], loc=(12,
0)), FuncDef(return_type=BasicTypeKind::Void, name=heap_sort,
args=[Arg(type=BasicTypeKind::Int, name=heap_size, loc=(40,
15))], decls=[VarDecl(type=VarType(type=BasicTypeKind::Int,
is_array=0, size=0), name=i, loc=(41, 2))],
stmts=[Assign(target=Name(id=i, ctx=ExprContextKind::Store,
loc=(43, 2)), value=BinOp(left=BinOp(left=Name(id=heap_size,
ctx=ExprContextKind::Load, loc=(43, 6)), op=OperatorKind::Div,
right=Num(n=2, loc=(43, 18)), loc=(43, 16)), op=OperatorKind::Sub,
right=Num(n=1, loc=(43, 22)), loc=(43, 20)), loc=(43, 2)),
While(condition=BinOp(left=Name(id=i, ctx=ExprContextKind::Load, loc=(44,
9)), op=OperatorKind::GtE, right=Num(n=0, loc=(44, 14)), loc=(44,
11)), body=[ExprStmt(value=Call(func=heapify, args=[Name(id=i,
ctx=ExprContextKind::Load, loc=(45, 12)), Name(id=heap_size,
ctx=ExprContextKind::Load, loc=(45, 15))], loc=(45, 11)), loc=(45, 4)),
Assign(target=Name(id=i, ctx=ExprContextKind::Store, loc=(46,
4)), value=BinOp(left=Name(id=i, ctx=ExprContextKind::Load,
loc=(46, 8)), op=OperatorKind::Sub, right=Num(n=1,
loc=(46, 12)), loc=(46, 10)), loc=(46, 4))], loc=(44, 2)),
For(initial=Assign(target=Name(id=i, ctx=ExprContextKind::Store, loc=(49,
7)), value=BinOp(left=Name(id=heap_size, ctx=ExprContextKind::Load,
loc=(49, 11)), op=OperatorKind::Sub, right=Num(n=1, loc=(49,
23)), loc=(49, 21)), loc=(49, 7)), condition=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=(49, 26)), op=OperatorKind::GtE,
right=Num(n=0, loc=(49, 31)), loc=(49, 28)), step=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=(49, 34)), value=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=(49, 38)), op=OperatorKind::Sub,
right=Num(n=1, loc=(49, 42)), loc=(49, 38)), loc=(49, 34)),
body=[ExprStmt(value=Call(func=swap, args=[Num(n=0, loc=(50, 9)),
Name(id=i, ctx=ExprContextKind::Load, loc=(50, 12))], loc=(50, 8)),
loc=(50, 4)), ExprStmt(value=Call(func=heapify, args=[Num(n=0,
loc=(51, 12)), Name(id=i, ctx=ExprContextKind::Load, loc=(51,
15))], loc=(51, 11)), loc=(51, 4))], loc=(49, 2))], loc=(40,
0)), FuncDef(return_type=BasicTypeKind::Void, name=print_heap,
args=[Arg(type=BasicTypeKind::Int, name=heap_size, loc=(55, 16))],
decls=[VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0, size=0),
name=i, loc=(56, 2))], stmts=[For(initial=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=(58, 7)), value=Num(n=0,
loc=(58, 11)), loc=(58, 7)), condition=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=(58, 14)), op=OperatorKind::Lt,
right=Name(id=heap_size, ctx=ExprContextKind::Load,
loc=(58, 18)), loc=(58, 16)), step=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=(58, 29)), value=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=(58, 33)), op=OperatorKind::Add,
right=Num(n=1, loc=(58, 37)), loc=(58, 33)), loc=(58, 29)),
body=[Write(str=None, value=Subscript(name=heap, index=Name(id=i,
ctx=ExprContextKind::Load, loc=(59, 16)), ctx=ExprContextKind::Load,
loc=(59, 15)), loc=(59, 4)), If(test=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=(60, 8)), op=OperatorKind::NotEq,
right=BinOp(left=Name(id=heap_size, ctx=ExprContextKind::Load,
loc=(60, 13)), op=OperatorKind::Sub, right=Num(n=1, loc=(60, 25)),
loc=(60, 23)), loc=(60, 10)), body=[Write(str=" ", value=None,
loc=(61, 6))], orelse=[], loc=(60, 4))], loc=(58, 2))], loc=(55, 0)),
FuncDef(return_type=BasicTypeKind::Void, name=reset_heap, args=[],
decls=[VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0, size=0),
name=i, loc=(67, 2))], stmts=[For(initial=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=(69, 7)), value=Num(n=0, loc=(69, 11)),
loc=(69, 7)), condition=BinOp(left=Name(id=i, ctx=ExprContextKind::Load,
loc=(69, 14)), op=OperatorKind::Lt, right=Name(id=max_heap_size,
ctx=ExprContextKind::Load, loc=(69, 18)), loc=(69, 16)),
step=Assign(target=Name(id=i, ctx=ExprContextKind::Store, loc=(69,
33)), value=BinOp(left=Name(id=i, ctx=ExprContextKind::Load, loc=(69,
37)), op=OperatorKind::Add, right=Num(n=1, loc=(69, 41)), loc=(69, 37)),
loc=(69, 33)), body=[Assign(target=Subscript(name=heap, index=Name(id=i,
ctx=ExprContextKind::Load, loc=(70, 9)), ctx=ExprContextKind::Store,
loc=(70, 8)), value=Num(n=0, loc=(70, 14)), loc=(70, 4))], loc=(69, 2))],
loc=(66, 0)), FuncDef(return_type=BasicTypeKind::Void, name=main, args=[],
decls=[VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0, size=0),
name=n, loc=(75, 2)), VarDecl(type=VarType(type=BasicTypeKind::Int,
is_array=0, size=0), name=temp, loc=(76, 2)),
VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0, size=0),
name=i, loc=(77, 2)), VarDecl(type=VarType(type=BasicTypeKind::Int,
is_array=0, size=0), name=j, loc=(77, 2)),
VarDecl(type=VarType(type=BasicTypeKind::Int, is_array=0, size=0),
name=array_size, loc=(78, 2))], stmts=[ExprStmt(value=Name(id=reset_heap,
ctx=ExprContextKind::Load, loc=(80, 2)), loc=(80, 2)),
Read(names=[n], loc=(81, 2)), For(initial=Assign(target=Name(id=i,
ctx=ExprContextKind::Store, loc=(83, 7)), value=Num(n=0,
loc=(83, 11)), loc=(83, 7)), condition=BinOp(left=Name(id=i,
ctx=ExprContextKind::Load, loc=(83, 14)), op=OperatorKind::Lt,
right=Name(id=n, ctx=ExprContextKind::Load, loc=(83, 18)), loc=(83,
16)), step=Assign(target=Name(id=i, ctx=ExprContextKind::Store, loc=(83,
21)), value=BinOp(left=Name(id=i, ctx=ExprContextKind::Load, loc=(83,
25)), op=OperatorKind::Add, right=Num(n=1, loc=(83, 29)), loc=(83,
25)), loc=(83, 21)), body=[Read(names=[array_size], loc=(84, 4)),
If(test=BinOp(left=Name(id=array_size, ctx=ExprContextKind::Load,
loc=(85, 8)), op=OperatorKind::Gt, right=Name(id=max_heap_size,
ctx=ExprContextKind::Load, loc=(85, 21)), loc=(85, 19)),
body=[Write(str="array_size exceeds max_heap_size", value=None,
loc=(86, 6))], orelse=[For(initial=Assign(target=Name(id=j,
ctx=ExprContextKind::Store, loc=(88, 11)), value=Num(n=0,
loc=(88, 15)), loc=(88, 11)), condition=BinOp(left=Name(id=j,
ctx=ExprContextKind::Load, loc=(88, 18)), op=OperatorKind::Lt,
right=Name(id=array_size, ctx=ExprContextKind::Load, loc=(88, 22)),
loc=(88, 20)), step=Assign(target=Name(id=j, ctx=ExprContextKind::Store,
loc=(88, 34)), value=BinOp(left=Name(id=j, ctx=ExprContextKind::Load,
loc=(88, 38)), op=OperatorKind::Add, right=Num(n=1, loc=(88, 42)),
loc=(88, 38)), loc=(88, 34)), body=[Read(names=[temp], loc=(89,
8)), Assign(target=Subscript(name=heap, index=Name(id=j,
ctx=ExprContextKind::Load, loc=(90, 13)), ctx=ExprContextKind::Store,
loc=(90, 12)), value=Name(id=temp, ctx=ExprContextKind::Load, loc=(90,
18)), loc=(90, 8))], loc=(88, 6)), ExprStmt(value=Call(func=heap_sort,
args=[Name(id=array_size, ctx=ExprContextKind::Load, loc=(92, 16))],
loc=(92, 15)), loc=(92, 6)), ExprStmt(value=Call(func=print_heap,
args=[Name(id=array_size, ctx=ExprContextKind::Load, loc=(93, 17))],
loc=(93, 16)), loc=(93, 6))], loc=(85, 4))], loc=(83, 2))], loc=(74, 0))])

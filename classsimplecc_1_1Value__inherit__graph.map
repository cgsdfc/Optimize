<map id="simplecc::Value" name="simplecc::Value">
<area shape="rect" id="node2" href="$classsimplecc_1_1Argument.html" title="This class represents a formal argument in a Function. " alt="" coords="5,468,144,604"/>
<area shape="rect" id="node3" href="$classsimplecc_1_1BasicBlock.html" title="{simplecc::BasicBlock\n||+ BasicBlock()\l+ operator=()\l+ getParent()\l+ begin()\l+ end()\l+ begin()\l+ end()\l+ rbegin()\l+ rend()\l+ rbegin()\land 12 more...\l+ Create()\l+ InstanceCheck()\l}" alt="" coords="169,409,317,663"/>
<area shape="rect" id="node4" href="$classsimplecc_1_1ConstantInt.html" title="This class represents a constant signed integer literal. " alt="" coords="341,461,491,611"/>
<area shape="rect" id="node5" href="$classsimplecc_1_1Function.html" title="The Function class is merely an ordered list of BasicBlocks. " alt="" coords="515,409,647,663"/>
<area shape="rect" id="node6" href="$classsimplecc_1_1GlobalVariable.html" title="GlobalVariable is a list of int. Its type is PointerTy. " alt="" coords="671,483,838,589"/>
<area shape="rect" id="node7" href="$classsimplecc_1_1StringLiteral.html" title="This class represents a string literal. " alt="" coords="862,483,1013,589"/>
<area shape="rect" id="node8" href="$classsimplecc_1_1User.html" title="User represents a Value that can use other Values as operands. " alt="" coords="1037,380,1181,692"/>
<area shape="rect" id="node9" href="$classsimplecc_1_1Instruction.html" title="{simplecc::Instruction\n||+ getParent()\l+ getParent()\l+ getModule()\l+ getModule()\l+ getFunction()\l+ getFunction()\l+ removeFromParent()\l+ insertBefore()\l+ insertAfter()\l+ moveBefore()\land 21 more...\l+ getOpcodeName()\l+ isTerminator()\l+ isBinaryOp()\l+ isAssociative()\l+ isCommutative()\l+ InstanceCheck()\l# Instruction()\l# ~Instruction()\l}" alt="" coords="1033,740,1186,1081"/>
<area shape="rect" id="node10" href="$classsimplecc_1_1AllocaInst.html" title="This class represents the alloca instruction. " alt="" coords="210,1188,350,1295"/>
<area shape="rect" id="node11" href="$classsimplecc_1_1BinaryOperator.html" title="BinaryOperator performs 4 basic arithmetic on its operands. " alt="" coords="374,1173,543,1309"/>
<area shape="rect" id="node12" href="$classsimplecc_1_1BranchInst.html" title="This class represents the br instruction. " alt="" coords="568,1129,725,1353"/>
<area shape="rect" id="node13" href="$classsimplecc_1_1CallInst.html" title="The CallInst applies a list of Values to a Function and return its result. " alt="" coords="749,1129,896,1353"/>
<area shape="rect" id="node14" href="$classsimplecc_1_1GetElementPtrInst.html" title="GetElementPtrInst accepts a base ptr and an offset and returns a ptr to the element at the specific o..." alt="" coords="921,1181,1111,1302"/>
<area shape="rect" id="node15" href="$classsimplecc_1_1ICmpInst.html" title="CmpInst perform rich comparison on its 2 operands. " alt="" coords="1136,1195,1272,1287"/>
<area shape="rect" id="node16" href="$classsimplecc_1_1LoadInst.html" title="This class represents the load instruction. " alt="" coords="1297,1188,1429,1295"/>
<area shape="rect" id="node17" href="$classsimplecc_1_1PHINode.html" title="PHINode is the multiplexer that accept a list of pair of an incoming BB and a Value, and select one of the Value if the control flow comes from the corresponding BB. " alt="" coords="1453,1188,1589,1295"/>
<area shape="rect" id="node18" href="$classsimplecc_1_1ReturnInst.html" title="This class represents the ret instruction. " alt="" coords="1613,1181,1771,1302"/>
<area shape="rect" id="node19" href="$classsimplecc_1_1StoreInst.html" title="StoreInst accepts a ptr and an int and store that int into the address. " alt="" coords="1795,1181,1930,1302"/>
</map>
